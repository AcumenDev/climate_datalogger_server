// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Temperature.proto

package com.acumendev.climatelogger.protocol;

public final class TemperatureOuterClass {
  private TemperatureOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TemperatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Temperature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Notify notify = 1;</code>
     */
    boolean hasNotify();
    /**
     * <code>optional .Notify notify = 1;</code>
     */
    com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify getNotify();
    /**
     * <code>optional .Notify notify = 1;</code>
     */
    com.acumendev.climatelogger.protocol.TemperatureOuterClass.NotifyOrBuilder getNotifyOrBuilder();

    /**
     * <code>optional .Config config = 2;</code>
     */
    boolean hasConfig();
    /**
     * <code>optional .Config config = 2;</code>
     */
    com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config getConfig();
    /**
     * <code>optional .Config config = 2;</code>
     */
    com.acumendev.climatelogger.protocol.TemperatureOuterClass.ConfigOrBuilder getConfigOrBuilder();
  }
  /**
   * Protobuf type {@code Temperature}
   */
  public  static final class Temperature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Temperature)
      TemperatureOrBuilder {
    // Use Temperature.newBuilder() to construct.
    private Temperature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Temperature() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Temperature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = notify_.toBuilder();
              }
              notify_ = input.readMessage(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(notify_);
                notify_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Temperature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Temperature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.class, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.Builder.class);
    }

    private int bitField0_;
    public static final int NOTIFY_FIELD_NUMBER = 1;
    private com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify notify_;
    /**
     * <code>optional .Notify notify = 1;</code>
     */
    public boolean hasNotify() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Notify notify = 1;</code>
     */
    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify getNotify() {
      return notify_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.getDefaultInstance() : notify_;
    }
    /**
     * <code>optional .Notify notify = 1;</code>
     */
    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.NotifyOrBuilder getNotifyOrBuilder() {
      return notify_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.getDefaultInstance() : notify_;
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config config_;
    /**
     * <code>optional .Config config = 2;</code>
     */
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Config config = 2;</code>
     */
    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config getConfig() {
      return config_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.getDefaultInstance() : config_;
    }
    /**
     * <code>optional .Config config = 2;</code>
     */
    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.ConfigOrBuilder getConfigOrBuilder() {
      return config_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.getDefaultInstance() : config_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getNotify());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getConfig());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNotify());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature)) {
        return super.equals(obj);
      }
      com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature other = (com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature) obj;

      boolean result = true;
      result = result && (hasNotify() == other.hasNotify());
      if (hasNotify()) {
        result = result && getNotify()
            .equals(other.getNotify());
      }
      result = result && (hasConfig() == other.hasConfig());
      if (hasConfig()) {
        result = result && getConfig()
            .equals(other.getConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasNotify()) {
        hash = (37 * hash) + NOTIFY_FIELD_NUMBER;
        hash = (53 * hash) + getNotify().hashCode();
      }
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Temperature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Temperature)
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.TemperatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Temperature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Temperature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.class, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.Builder.class);
      }

      // Construct using com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNotifyFieldBuilder();
          getConfigFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (notifyBuilder_ == null) {
          notify_ = null;
        } else {
          notifyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Temperature_descriptor;
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature getDefaultInstanceForType() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.getDefaultInstance();
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature build() {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature buildPartial() {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature result = new com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (notifyBuilder_ == null) {
          result.notify_ = notify_;
        } else {
          result.notify_ = notifyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature) {
          return mergeFrom((com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature other) {
        if (other == com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.getDefaultInstance()) return this;
        if (other.hasNotify()) {
          mergeNotify(other.getNotify());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify notify_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.NotifyOrBuilder> notifyBuilder_;
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      public boolean hasNotify() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify getNotify() {
        if (notifyBuilder_ == null) {
          return notify_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.getDefaultInstance() : notify_;
        } else {
          return notifyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      public Builder setNotify(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify value) {
        if (notifyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          notify_ = value;
          onChanged();
        } else {
          notifyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      public Builder setNotify(
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.Builder builderForValue) {
        if (notifyBuilder_ == null) {
          notify_ = builderForValue.build();
          onChanged();
        } else {
          notifyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      public Builder mergeNotify(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify value) {
        if (notifyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              notify_ != null &&
              notify_ != com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.getDefaultInstance()) {
            notify_ =
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.newBuilder(notify_).mergeFrom(value).buildPartial();
          } else {
            notify_ = value;
          }
          onChanged();
        } else {
          notifyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      public Builder clearNotify() {
        if (notifyBuilder_ == null) {
          notify_ = null;
          onChanged();
        } else {
          notifyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.Builder getNotifyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNotifyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.NotifyOrBuilder getNotifyOrBuilder() {
        if (notifyBuilder_ != null) {
          return notifyBuilder_.getMessageOrBuilder();
        } else {
          return notify_ == null ?
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.getDefaultInstance() : notify_;
        }
      }
      /**
       * <code>optional .Notify notify = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.NotifyOrBuilder> 
          getNotifyFieldBuilder() {
        if (notifyBuilder_ == null) {
          notifyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.NotifyOrBuilder>(
                  getNotify(),
                  getParentForChildren(),
                  isClean());
          notify_ = null;
        }
        return notifyBuilder_;
      }

      private com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config config_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.ConfigOrBuilder> configBuilder_;
      /**
       * <code>optional .Config config = 2;</code>
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Config config = 2;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Config config = 2;</code>
       */
      public Builder setConfig(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Config config = 2;</code>
       */
      public Builder setConfig(
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Config config = 2;</code>
       */
      public Builder mergeConfig(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              config_ != null &&
              config_ != com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.getDefaultInstance()) {
            config_ =
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Config config = 2;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Config config = 2;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.Builder getConfigBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Config config = 2;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.ConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.getDefaultInstance() : config_;
        }
      }
      /**
       * <code>optional .Config config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.ConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.ConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Temperature)
    }

    // @@protoc_insertion_point(class_scope:Temperature)
    private static final com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature();
    }

    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Temperature>
        PARSER = new com.google.protobuf.AbstractParser<Temperature>() {
      public Temperature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Temperature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Temperature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Temperature> getParserForType() {
      return PARSER;
    }

    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Notify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float current = 1;</code>
     */
    boolean hasCurrent();
    /**
     * <code>optional float current = 1;</code>
     */
    float getCurrent();

    /**
     * <code>optional uint32 heatingState = 2;</code>
     */
    boolean hasHeatingState();
    /**
     * <code>optional uint32 heatingState = 2;</code>
     */
    int getHeatingState();

    /**
     * <code>optional uint32 coolingState = 3;</code>
     */
    boolean hasCoolingState();
    /**
     * <code>optional uint32 coolingState = 3;</code>
     */
    int getCoolingState();
  }
  /**
   * Protobuf type {@code Notify}
   */
  public  static final class Notify extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Notify)
      NotifyOrBuilder {
    // Use Notify.newBuilder() to construct.
    private Notify(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Notify() {
      current_ = 0F;
      heatingState_ = 0;
      coolingState_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Notify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              current_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              heatingState_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              coolingState_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Notify_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Notify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.class, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.Builder.class);
    }

    private int bitField0_;
    public static final int CURRENT_FIELD_NUMBER = 1;
    private float current_;
    /**
     * <code>optional float current = 1;</code>
     */
    public boolean hasCurrent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float current = 1;</code>
     */
    public float getCurrent() {
      return current_;
    }

    public static final int HEATINGSTATE_FIELD_NUMBER = 2;
    private int heatingState_;
    /**
     * <code>optional uint32 heatingState = 2;</code>
     */
    public boolean hasHeatingState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 heatingState = 2;</code>
     */
    public int getHeatingState() {
      return heatingState_;
    }

    public static final int COOLINGSTATE_FIELD_NUMBER = 3;
    private int coolingState_;
    /**
     * <code>optional uint32 coolingState = 3;</code>
     */
    public boolean hasCoolingState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 coolingState = 3;</code>
     */
    public int getCoolingState() {
      return coolingState_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, current_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, heatingState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, coolingState_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, current_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, heatingState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, coolingState_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify)) {
        return super.equals(obj);
      }
      com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify other = (com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify) obj;

      boolean result = true;
      result = result && (hasCurrent() == other.hasCurrent());
      if (hasCurrent()) {
        result = result && (
            java.lang.Float.floatToIntBits(getCurrent())
            == java.lang.Float.floatToIntBits(
                other.getCurrent()));
      }
      result = result && (hasHeatingState() == other.hasHeatingState());
      if (hasHeatingState()) {
        result = result && (getHeatingState()
            == other.getHeatingState());
      }
      result = result && (hasCoolingState() == other.hasCoolingState());
      if (hasCoolingState()) {
        result = result && (getCoolingState()
            == other.getCoolingState());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasCurrent()) {
        hash = (37 * hash) + CURRENT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getCurrent());
      }
      if (hasHeatingState()) {
        hash = (37 * hash) + HEATINGSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getHeatingState();
      }
      if (hasCoolingState()) {
        hash = (37 * hash) + COOLINGSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getCoolingState();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Notify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Notify)
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.NotifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Notify_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Notify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.class, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.Builder.class);
      }

      // Construct using com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        current_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        heatingState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        coolingState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Notify_descriptor;
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify getDefaultInstanceForType() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.getDefaultInstance();
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify build() {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify buildPartial() {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify result = new com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.current_ = current_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heatingState_ = heatingState_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.coolingState_ = coolingState_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify) {
          return mergeFrom((com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify other) {
        if (other == com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify.getDefaultInstance()) return this;
        if (other.hasCurrent()) {
          setCurrent(other.getCurrent());
        }
        if (other.hasHeatingState()) {
          setHeatingState(other.getHeatingState());
        }
        if (other.hasCoolingState()) {
          setCoolingState(other.getCoolingState());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float current_ ;
      /**
       * <code>optional float current = 1;</code>
       */
      public boolean hasCurrent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float current = 1;</code>
       */
      public float getCurrent() {
        return current_;
      }
      /**
       * <code>optional float current = 1;</code>
       */
      public Builder setCurrent(float value) {
        bitField0_ |= 0x00000001;
        current_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float current = 1;</code>
       */
      public Builder clearCurrent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        current_ = 0F;
        onChanged();
        return this;
      }

      private int heatingState_ ;
      /**
       * <code>optional uint32 heatingState = 2;</code>
       */
      public boolean hasHeatingState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 heatingState = 2;</code>
       */
      public int getHeatingState() {
        return heatingState_;
      }
      /**
       * <code>optional uint32 heatingState = 2;</code>
       */
      public Builder setHeatingState(int value) {
        bitField0_ |= 0x00000002;
        heatingState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 heatingState = 2;</code>
       */
      public Builder clearHeatingState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heatingState_ = 0;
        onChanged();
        return this;
      }

      private int coolingState_ ;
      /**
       * <code>optional uint32 coolingState = 3;</code>
       */
      public boolean hasCoolingState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 coolingState = 3;</code>
       */
      public int getCoolingState() {
        return coolingState_;
      }
      /**
       * <code>optional uint32 coolingState = 3;</code>
       */
      public Builder setCoolingState(int value) {
        bitField0_ |= 0x00000004;
        coolingState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 coolingState = 3;</code>
       */
      public Builder clearCoolingState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        coolingState_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Notify)
    }

    // @@protoc_insertion_point(class_scope:Notify)
    private static final com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify();
    }

    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Notify>
        PARSER = new com.google.protobuf.AbstractParser<Notify>() {
      public Notify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Notify(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Notify> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Notify> getParserForType() {
      return PARSER;
    }

    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Notify getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Config)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float target = 1;</code>
     */
    boolean hasTarget();
    /**
     * <code>optional float target = 1;</code>
     */
    float getTarget();

    /**
     * <code>optional float gisteris = 2;</code>
     */
    boolean hasGisteris();
    /**
     * <code>optional float gisteris = 2;</code>
     */
    float getGisteris();

    /**
     * <code>optional float tuningSensor = 3;</code>
     */
    boolean hasTuningSensor();
    /**
     * <code>optional float tuningSensor = 3;</code>
     */
    float getTuningSensor();
  }
  /**
   * Protobuf type {@code Config}
   */
  public  static final class Config extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Config)
      ConfigOrBuilder {
    // Use Config.newBuilder() to construct.
    private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Config() {
      target_ = 0F;
      gisteris_ = 0F;
      tuningSensor_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Config(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              target_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              gisteris_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              tuningSensor_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Config_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.class, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.Builder.class);
    }

    private int bitField0_;
    public static final int TARGET_FIELD_NUMBER = 1;
    private float target_;
    /**
     * <code>optional float target = 1;</code>
     */
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float target = 1;</code>
     */
    public float getTarget() {
      return target_;
    }

    public static final int GISTERIS_FIELD_NUMBER = 2;
    private float gisteris_;
    /**
     * <code>optional float gisteris = 2;</code>
     */
    public boolean hasGisteris() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float gisteris = 2;</code>
     */
    public float getGisteris() {
      return gisteris_;
    }

    public static final int TUNINGSENSOR_FIELD_NUMBER = 3;
    private float tuningSensor_;
    /**
     * <code>optional float tuningSensor = 3;</code>
     */
    public boolean hasTuningSensor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float tuningSensor = 3;</code>
     */
    public float getTuningSensor() {
      return tuningSensor_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, target_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, gisteris_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, tuningSensor_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, target_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, gisteris_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, tuningSensor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config)) {
        return super.equals(obj);
      }
      com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config other = (com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config) obj;

      boolean result = true;
      result = result && (hasTarget() == other.hasTarget());
      if (hasTarget()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTarget())
            == java.lang.Float.floatToIntBits(
                other.getTarget()));
      }
      result = result && (hasGisteris() == other.hasGisteris());
      if (hasGisteris()) {
        result = result && (
            java.lang.Float.floatToIntBits(getGisteris())
            == java.lang.Float.floatToIntBits(
                other.getGisteris()));
      }
      result = result && (hasTuningSensor() == other.hasTuningSensor());
      if (hasTuningSensor()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTuningSensor())
            == java.lang.Float.floatToIntBits(
                other.getTuningSensor()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTarget());
      }
      if (hasGisteris()) {
        hash = (37 * hash) + GISTERIS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getGisteris());
      }
      if (hasTuningSensor()) {
        hash = (37 * hash) + TUNINGSENSOR_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTuningSensor());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Config)
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.ConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Config_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.class, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.Builder.class);
      }

      // Construct using com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        target_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        gisteris_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        tuningSensor_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.internal_static_Config_descriptor;
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config getDefaultInstanceForType() {
        return com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.getDefaultInstance();
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config build() {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config buildPartial() {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config result = new com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.target_ = target_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gisteris_ = gisteris_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tuningSensor_ = tuningSensor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config) {
          return mergeFrom((com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config other) {
        if (other == com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config.getDefaultInstance()) return this;
        if (other.hasTarget()) {
          setTarget(other.getTarget());
        }
        if (other.hasGisteris()) {
          setGisteris(other.getGisteris());
        }
        if (other.hasTuningSensor()) {
          setTuningSensor(other.getTuningSensor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float target_ ;
      /**
       * <code>optional float target = 1;</code>
       */
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float target = 1;</code>
       */
      public float getTarget() {
        return target_;
      }
      /**
       * <code>optional float target = 1;</code>
       */
      public Builder setTarget(float value) {
        bitField0_ |= 0x00000001;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float target = 1;</code>
       */
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000001);
        target_ = 0F;
        onChanged();
        return this;
      }

      private float gisteris_ ;
      /**
       * <code>optional float gisteris = 2;</code>
       */
      public boolean hasGisteris() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float gisteris = 2;</code>
       */
      public float getGisteris() {
        return gisteris_;
      }
      /**
       * <code>optional float gisteris = 2;</code>
       */
      public Builder setGisteris(float value) {
        bitField0_ |= 0x00000002;
        gisteris_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float gisteris = 2;</code>
       */
      public Builder clearGisteris() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gisteris_ = 0F;
        onChanged();
        return this;
      }

      private float tuningSensor_ ;
      /**
       * <code>optional float tuningSensor = 3;</code>
       */
      public boolean hasTuningSensor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float tuningSensor = 3;</code>
       */
      public float getTuningSensor() {
        return tuningSensor_;
      }
      /**
       * <code>optional float tuningSensor = 3;</code>
       */
      public Builder setTuningSensor(float value) {
        bitField0_ |= 0x00000004;
        tuningSensor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tuningSensor = 3;</code>
       */
      public Builder clearTuningSensor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tuningSensor_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Config)
    }

    // @@protoc_insertion_point(class_scope:Config)
    private static final com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config();
    }

    public static com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Config>
        PARSER = new com.google.protobuf.AbstractParser<Config>() {
      public Config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Config(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Config> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Config> getParserForType() {
      return PARSER;
    }

    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Config getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Temperature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Temperature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Notify_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Notify_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Config_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021Temperature.proto\"?\n\013Temperature\022\027\n\006no" +
      "tify\030\001 \001(\0132\007.Notify\022\027\n\006config\030\002 \001(\0132\007.Co" +
      "nfig\"E\n\006Notify\022\017\n\007current\030\001 \001(\002\022\024\n\014heati" +
      "ngState\030\002 \001(\r\022\024\n\014coolingState\030\003 \001(\r\"@\n\006C" +
      "onfig\022\016\n\006target\030\001 \001(\002\022\020\n\010gisteris\030\002 \001(\002\022" +
      "\024\n\014tuningSensor\030\003 \001(\002B&\n$com.acumendev.c" +
      "limatelogger.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Temperature_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Temperature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Temperature_descriptor,
        new java.lang.String[] { "Notify", "Config", });
    internal_static_Notify_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Notify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Notify_descriptor,
        new java.lang.String[] { "Current", "HeatingState", "CoolingState", });
    internal_static_Config_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Config_descriptor,
        new java.lang.String[] { "Target", "Gisteris", "TuningSensor", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
