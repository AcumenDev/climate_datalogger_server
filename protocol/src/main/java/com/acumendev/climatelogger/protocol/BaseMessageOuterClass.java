// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseMessage.proto

package com.acumendev.climatelogger.protocol;

public final class BaseMessageOuterClass {
  private BaseMessageOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BaseMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BaseMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Auth auth = 1;</code>
     */
    boolean hasAuth();
    /**
     * <code>optional .Auth auth = 1;</code>
     */
    com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth getAuth();
    /**
     * <code>optional .Auth auth = 1;</code>
     */
    com.acumendev.climatelogger.protocol.BaseMessageOuterClass.AuthOrBuilder getAuthOrBuilder();

    /**
     * <code>optional .Temperature temperature = 2;</code>
     */
    boolean hasTemperature();
    /**
     * <code>optional .Temperature temperature = 2;</code>
     */
    com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature getTemperature();
    /**
     * <code>optional .Temperature temperature = 2;</code>
     */
    com.acumendev.climatelogger.protocol.TemperatureOuterClass.TemperatureOrBuilder getTemperatureOrBuilder();
  }
  /**
   * Protobuf type {@code BaseMessage}
   */
  public  static final class BaseMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BaseMessage)
      BaseMessageOrBuilder {
    // Use BaseMessage.newBuilder() to construct.
    private BaseMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BaseMessage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BaseMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = auth_.toBuilder();
              }
              auth_ = input.readMessage(com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(auth_);
                auth_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = temperature_.toBuilder();
              }
              temperature_ = input.readMessage(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(temperature_);
                temperature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_BaseMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_BaseMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage.class, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage.Builder.class);
    }

    private int bitField0_;
    public static final int AUTH_FIELD_NUMBER = 1;
    private com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth auth_;
    /**
     * <code>optional .Auth auth = 1;</code>
     */
    public boolean hasAuth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Auth auth = 1;</code>
     */
    public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth getAuth() {
      return auth_ == null ? com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.getDefaultInstance() : auth_;
    }
    /**
     * <code>optional .Auth auth = 1;</code>
     */
    public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.AuthOrBuilder getAuthOrBuilder() {
      return auth_ == null ? com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.getDefaultInstance() : auth_;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 2;
    private com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature temperature_;
    /**
     * <code>optional .Temperature temperature = 2;</code>
     */
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Temperature temperature = 2;</code>
     */
    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature getTemperature() {
      return temperature_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.getDefaultInstance() : temperature_;
    }
    /**
     * <code>optional .Temperature temperature = 2;</code>
     */
    public com.acumendev.climatelogger.protocol.TemperatureOuterClass.TemperatureOrBuilder getTemperatureOrBuilder() {
      return temperature_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.getDefaultInstance() : temperature_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getAuth());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getTemperature());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAuth());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTemperature());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage)) {
        return super.equals(obj);
      }
      com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage other = (com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage) obj;

      boolean result = true;
      result = result && (hasAuth() == other.hasAuth());
      if (hasAuth()) {
        result = result && getAuth()
            .equals(other.getAuth());
      }
      result = result && (hasTemperature() == other.hasTemperature());
      if (hasTemperature()) {
        result = result && getTemperature()
            .equals(other.getTemperature());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasAuth()) {
        hash = (37 * hash) + AUTH_FIELD_NUMBER;
        hash = (53 * hash) + getAuth().hashCode();
      }
      if (hasTemperature()) {
        hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + getTemperature().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BaseMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BaseMessage)
        com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_BaseMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_BaseMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage.class, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage.Builder.class);
      }

      // Construct using com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAuthFieldBuilder();
          getTemperatureFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (authBuilder_ == null) {
          auth_ = null;
        } else {
          authBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (temperatureBuilder_ == null) {
          temperature_ = null;
        } else {
          temperatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_BaseMessage_descriptor;
      }

      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage getDefaultInstanceForType() {
        return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage.getDefaultInstance();
      }

      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage build() {
        com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage buildPartial() {
        com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage result = new com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (authBuilder_ == null) {
          result.auth_ = auth_;
        } else {
          result.auth_ = authBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (temperatureBuilder_ == null) {
          result.temperature_ = temperature_;
        } else {
          result.temperature_ = temperatureBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage) {
          return mergeFrom((com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage other) {
        if (other == com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage.getDefaultInstance()) return this;
        if (other.hasAuth()) {
          mergeAuth(other.getAuth());
        }
        if (other.hasTemperature()) {
          mergeTemperature(other.getTemperature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth auth_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.Builder, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.AuthOrBuilder> authBuilder_;
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      public boolean hasAuth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth getAuth() {
        if (authBuilder_ == null) {
          return auth_ == null ? com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.getDefaultInstance() : auth_;
        } else {
          return authBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      public Builder setAuth(com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth value) {
        if (authBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          auth_ = value;
          onChanged();
        } else {
          authBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      public Builder setAuth(
          com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.Builder builderForValue) {
        if (authBuilder_ == null) {
          auth_ = builderForValue.build();
          onChanged();
        } else {
          authBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      public Builder mergeAuth(com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth value) {
        if (authBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              auth_ != null &&
              auth_ != com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.getDefaultInstance()) {
            auth_ =
              com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.newBuilder(auth_).mergeFrom(value).buildPartial();
          } else {
            auth_ = value;
          }
          onChanged();
        } else {
          authBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      public Builder clearAuth() {
        if (authBuilder_ == null) {
          auth_ = null;
          onChanged();
        } else {
          authBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.Builder getAuthBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAuthFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.AuthOrBuilder getAuthOrBuilder() {
        if (authBuilder_ != null) {
          return authBuilder_.getMessageOrBuilder();
        } else {
          return auth_ == null ?
              com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.getDefaultInstance() : auth_;
        }
      }
      /**
       * <code>optional .Auth auth = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.Builder, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.AuthOrBuilder> 
          getAuthFieldBuilder() {
        if (authBuilder_ == null) {
          authBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.Builder, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.AuthOrBuilder>(
                  getAuth(),
                  getParentForChildren(),
                  isClean());
          auth_ = null;
        }
        return authBuilder_;
      }

      private com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature temperature_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.TemperatureOrBuilder> temperatureBuilder_;
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature getTemperature() {
        if (temperatureBuilder_ == null) {
          return temperature_ == null ? com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.getDefaultInstance() : temperature_;
        } else {
          return temperatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      public Builder setTemperature(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature value) {
        if (temperatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          temperature_ = value;
          onChanged();
        } else {
          temperatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      public Builder setTemperature(
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.Builder builderForValue) {
        if (temperatureBuilder_ == null) {
          temperature_ = builderForValue.build();
          onChanged();
        } else {
          temperatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      public Builder mergeTemperature(com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature value) {
        if (temperatureBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              temperature_ != null &&
              temperature_ != com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.getDefaultInstance()) {
            temperature_ =
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.newBuilder(temperature_).mergeFrom(value).buildPartial();
          } else {
            temperature_ = value;
          }
          onChanged();
        } else {
          temperatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      public Builder clearTemperature() {
        if (temperatureBuilder_ == null) {
          temperature_ = null;
          onChanged();
        } else {
          temperatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.Builder getTemperatureBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTemperatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      public com.acumendev.climatelogger.protocol.TemperatureOuterClass.TemperatureOrBuilder getTemperatureOrBuilder() {
        if (temperatureBuilder_ != null) {
          return temperatureBuilder_.getMessageOrBuilder();
        } else {
          return temperature_ == null ?
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.getDefaultInstance() : temperature_;
        }
      }
      /**
       * <code>optional .Temperature temperature = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.TemperatureOrBuilder> 
          getTemperatureFieldBuilder() {
        if (temperatureBuilder_ == null) {
          temperatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature, com.acumendev.climatelogger.protocol.TemperatureOuterClass.Temperature.Builder, com.acumendev.climatelogger.protocol.TemperatureOuterClass.TemperatureOrBuilder>(
                  getTemperature(),
                  getParentForChildren(),
                  isClean());
          temperature_ = null;
        }
        return temperatureBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BaseMessage)
    }

    // @@protoc_insertion_point(class_scope:BaseMessage)
    private static final com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage();
    }

    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BaseMessage>
        PARSER = new com.google.protobuf.AbstractParser<BaseMessage>() {
      public BaseMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BaseMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BaseMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BaseMessage> getParserForType() {
      return PARSER;
    }

    public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.BaseMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AuthOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Auth)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     */
    int getType();

    /**
     * <code>optional int32 version = 2;</code>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 version = 2;</code>
     */
    int getVersion();

    /**
     * <code>optional string apiKey = 3;</code>
     */
    boolean hasApiKey();
    /**
     * <code>optional string apiKey = 3;</code>
     */
    java.lang.String getApiKey();
    /**
     * <code>optional string apiKey = 3;</code>
     */
    com.google.protobuf.ByteString
        getApiKeyBytes();

    /**
     * <code>optional int32 state = 4;</code>
     */
    boolean hasState();
    /**
     * <code>optional int32 state = 4;</code>
     */
    int getState();
  }
  /**
   * Protobuf type {@code Auth}
   */
  public  static final class Auth extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Auth)
      AuthOrBuilder {
    // Use Auth.newBuilder() to construct.
    private Auth(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Auth() {
      type_ = 0;
      version_ = 0;
      apiKey_ = "";
      state_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Auth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              version_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              apiKey_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              state_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_Auth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_Auth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.class, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private int version_;
    /**
     * <code>optional int32 version = 2;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 version = 2;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int APIKEY_FIELD_NUMBER = 3;
    private volatile java.lang.Object apiKey_;
    /**
     * <code>optional string apiKey = 3;</code>
     */
    public boolean hasApiKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string apiKey = 3;</code>
     */
    public java.lang.String getApiKey() {
      java.lang.Object ref = apiKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          apiKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string apiKey = 3;</code>
     */
    public com.google.protobuf.ByteString
        getApiKeyBytes() {
      java.lang.Object ref = apiKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apiKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATE_FIELD_NUMBER = 4;
    private int state_;
    /**
     * <code>optional int32 state = 4;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 state = 4;</code>
     */
    public int getState() {
      return state_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, apiKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, state_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, apiKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, state_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth)) {
        return super.equals(obj);
      }
      com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth other = (com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && (getType()
            == other.getType());
      }
      result = result && (hasVersion() == other.hasVersion());
      if (hasVersion()) {
        result = result && (getVersion()
            == other.getVersion());
      }
      result = result && (hasApiKey() == other.hasApiKey());
      if (hasApiKey()) {
        result = result && getApiKey()
            .equals(other.getApiKey());
      }
      result = result && (hasState() == other.hasState());
      if (hasState()) {
        result = result && (getState()
            == other.getState());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      if (hasApiKey()) {
        hash = (37 * hash) + APIKEY_FIELD_NUMBER;
        hash = (53 * hash) + getApiKey().hashCode();
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Auth}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Auth)
        com.acumendev.climatelogger.protocol.BaseMessageOuterClass.AuthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_Auth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_Auth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.class, com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.Builder.class);
      }

      // Construct using com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        apiKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.internal_static_Auth_descriptor;
      }

      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth getDefaultInstanceForType() {
        return com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.getDefaultInstance();
      }

      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth build() {
        com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth buildPartial() {
        com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth result = new com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.apiKey_ = apiKey_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth) {
          return mergeFrom((com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth other) {
        if (other == com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasApiKey()) {
          bitField0_ |= 0x00000004;
          apiKey_ = other.apiKey_;
          onChanged();
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <code>optional int32 version = 2;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 version = 2;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional int32 version = 2;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version = 2;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object apiKey_ = "";
      /**
       * <code>optional string apiKey = 3;</code>
       */
      public boolean hasApiKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string apiKey = 3;</code>
       */
      public java.lang.String getApiKey() {
        java.lang.Object ref = apiKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            apiKey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string apiKey = 3;</code>
       */
      public com.google.protobuf.ByteString
          getApiKeyBytes() {
        java.lang.Object ref = apiKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          apiKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string apiKey = 3;</code>
       */
      public Builder setApiKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        apiKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string apiKey = 3;</code>
       */
      public Builder clearApiKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        apiKey_ = getDefaultInstance().getApiKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string apiKey = 3;</code>
       */
      public Builder setApiKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        apiKey_ = value;
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <code>optional int32 state = 4;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 state = 4;</code>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>optional int32 state = 4;</code>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000008;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 state = 4;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Auth)
    }

    // @@protoc_insertion_point(class_scope:Auth)
    private static final com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth();
    }

    public static com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Auth>
        PARSER = new com.google.protobuf.AbstractParser<Auth>() {
      public Auth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Auth(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Auth> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Auth> getParserForType() {
      return PARSER;
    }

    public com.acumendev.climatelogger.protocol.BaseMessageOuterClass.Auth getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BaseMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BaseMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Auth_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Auth_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021BaseMessage.proto\032\021Temperature.proto\"E" +
      "\n\013BaseMessage\022\023\n\004auth\030\001 \001(\0132\005.Auth\022!\n\013te" +
      "mperature\030\002 \001(\0132\014.Temperature\"D\n\004Auth\022\014\n" +
      "\004type\030\001 \001(\005\022\017\n\007version\030\002 \001(\005\022\016\n\006apiKey\030\003" +
      " \001(\t\022\r\n\005state\030\004 \001(\005B&\n$com.acumendev.cli" +
      "matelogger.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.acumendev.climatelogger.protocol.TemperatureOuterClass.getDescriptor(),
        }, assigner);
    internal_static_BaseMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BaseMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BaseMessage_descriptor,
        new java.lang.String[] { "Auth", "Temperature", });
    internal_static_Auth_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Auth_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Auth_descriptor,
        new java.lang.String[] { "Type", "Version", "ApiKey", "State", });
    com.acumendev.climatelogger.protocol.TemperatureOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
